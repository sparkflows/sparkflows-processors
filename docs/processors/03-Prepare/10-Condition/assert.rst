Assert
=========== 

This Node takes in an expression. It evaluates the expression and based on the results sends the execution to the first or the second output Node

Input
--------------
It accepts a DataFrame as input from the previous Node

Output
--------------
The incoming DataFrame is sent to the output. Only one of the output Nodes receives the DataFrame based on the results of the expression

Type
--------- 

transform

Class
--------- 

fire.nodes.etl.NodeAssert

Fields
--------- 

.. list-table::
      :widths: 10 5 10
      :header-rows: 1

      * - Name
        - Title
        - Description
      * - expression
        - Expression
        - Expression to be evaluated. It can use variables computed in the previous Nodes


Details
-------


This Node takes in an expression. 

It evaluates the expression and based on the results sends the incoming Dataframe for execution either to the first or the second output Node.

If expression evaluates to true then first output Node is executed otherwise second one. 

The expression can contain variables generated by the execution of the previous nodes. One such node is the Count node. It would generate a variable with a value equal to the number of rows in the Dataframe.


Examples
-------


 Expression can be entered as count > 100
+++++++++++++++

In the above expression the variable count has been generated by a previous Count node. 

If the expression evaluates to true, the output would go to the first edge of the Assert node.
If the expression evaluates to false, the output would go to the second edge of the Assert node.
